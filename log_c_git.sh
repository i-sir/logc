#!/bin/bash
while true; do
# 删除文件的函数
clear_directory() {
    # 指定要清空的文件夹路径
    directory_to_clear="/www/wwwroot/log-c/git_log/"

    # 确保文件夹存在
    if [ -d "$directory_to_clear" ]; then
        # 删除文件夹中的所有文件
        rm -f "$directory_to_clear"/*
        
        echo ^.
        echo ^..
        echo ^...
        echo ^....
        echo ^.....
        echo ^......
        echo ^.......
        echo ^........
        echo "All files in '$directory_to_clear' have been deleted."
        echo ^........
        echo ^......
        echo ^.....
        echo ^....
        echo ^...
        echo ^..
        echo ^.
    else
    
        echo ^.
        echo ^..
        echo ^...
        echo ^....
        echo ^.....
        echo ^......
        echo ^.......
        echo ^........
        echo "Directory '$directory_to_clear' does not exist."
        echo ^........
        echo ^......
        echo ^.....
        echo ^....
        echo ^...
        echo ^..
        echo ^.
    fi
}

# 创建文件夹和文件的函数
create_folder_and_file() {
    # 获取当前时间（年月日时分秒）
    current_time=$(date +"%Y%m%d%H%M%S")

    # 指定要创建的文件夹路径和文件路径
    folder_to_create="/www/wwwroot/log-c/git_log"
    file_to_create="$folder_to_create/$current_time.txt"

    # 创建文件夹
    mkdir -p "$folder_to_create"

    # 创建文件并写入内容
    echo ^.
    echo ^..
    echo ^...
    echo ^....
    echo ^.....
    echo ^......
    echo ^.......
    echo ^........
    echo "$current_time" > "$file_to_create"
    echo ^........
    echo ^......
    echo ^.....
    echo ^....
    echo ^...
    echo ^..
    echo ^.

    echo ^.
    echo ^..
    echo ^...
    echo ^....
    echo ^.....
    echo ^......
    echo ^.......
    echo ^........
    echo "Folder '$folder_to_create' and file '$file_to_create' have been created."
    echo ^........
    echo ^......
    echo ^.....
    echo ^....
    echo ^...
    echo ^..
    echo ^.
}

# Git提交的函数
git_commit() {
    # 指定Git仓库路径和主分支名称
    git_repo_path="/www/wwwroot/log-c"
    main_branch="master"

    # 获取当前时间（年月日时分秒）
    commit_message=$(date +"%Y%m%d%H%M%S")


    # 切换到Git仓库目录
    cd "$git_repo_path" || exit

    # 提交到Git仓库
    git add --all
    git commit -m "更新--[log-c]--;$commit_message"
    git push -f origin "$main_branch"


    echo ^.
    echo ^..
    echo ^...
    echo ^....
    echo ^.....
    echo ^......
    echo ^.......
    echo ^........
    echo "Changes pushed to Git."
    echo ^........
    echo ^......
    echo ^.....
    echo ^....
    echo ^...
    echo ^..
    echo ^.
}

# 执行删除文件操作
clear_directory

# 执行创建文件夹和文件操作
create_folder_and_file

# 执行Git提交操作
git_commit

# 120-360秒
sleep $(shuf -i 120-360 -n 1)
done




#kill -9 $(pgrep -f upload_and_commit.sh)   #此命令关闭脚本执行





